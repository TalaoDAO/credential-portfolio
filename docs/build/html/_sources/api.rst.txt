
Talent Connect API
==================

Talent Connect APIs can be used for authentication, authorization and claims issuance.
For companies it is an easy way to get reliable data about Talents and a powerfull and secure tool for onbarding while keeping user's data safe.

Those API do not provide account setup (company details, signature, logo ...) which are available through the web platform https://talao.co .

Standard use cases for APIs are :

* Issue certificates to Talents.
* Onboard Talents who have their own Decentralized Identity.
* Outsource Talent data.
* Strenghen an employer brand with latest technology features like Blockchain Resume, Decentralized Identity,...

The Talao API server is an OpenId Connect server. We use OpenID Connect Autorization Code flow and Client Credentials flow to manage those cases.
Contact us relay-support@talao.io to open your Company Identity and receive your application granted permissions to use those APIs.

Authorization Code flow
------------------------

For your users, the OpenID Connect authentication experience includes a consent screen that describes through 'scopes' the information that the user is releasing.
For example, when the user logs in, they might be asked to give your appication access to their name, email address and basic account information.
You request access to this information using the scope parameter, which your app includes in its authentication request.

Scopes for data access are standard OpenID Connect scopes :

* openid (sub)
* profile (sub + given_name + family_name + gender)
* birthdate
* email
* phone

Those data are available through a JWT and at the user_info endpoint. JWT is signed with alg : RS256 and RSA key. RSA Public Key available on request.

Below data and features which are also available with this flow at the user_info endpoint :

* resume : JSON current resume (see https://jsonresume.org/)
* proof_of_identity : last proof of identity
* private : Request authorization to access private data (partnership). If accepted your company will be added to the Talent's partner list.
* certification : Request authorization to issue certificates. If accepted your company will be added to the Talent's referent list.

Other scopes are avaialble for special features through the Client Credentials flow and specific endpoints (see further). 

To get a grant code from Talent, redirect your user to https://talao.co/api/v1/authorize with a subset of your scope list .
Talent will be asked to sign in with his/her Decentralized IDentifier (DID) and to consent for your list of scopes.

Example :

.. code::

   https://talao.co/api/v1/authorize?response_type=code&client_id=your_client_id&scope=your_scopes

With the grant code, connect to the token endpoint https://talao.co/api/v1/auth/token to get an Access Token and an ID Token. You will need your client_secret.

.. code::

   curl -u your_client_id:your_secret_value -XPOST https://talao.co/api/v1/oauth/token -F grant_type=client_credentials -F scope=your_scopes

With the Access Token you can get Talent data through the user_info endpoint https://talao.co/api/v1/user_info.

With the ID Token you can get user data without any new call.
For authentication best is to use the ID Token and verify its signature with the RSA key.

JWT ID Token payload example :

.. code-block:: JSON

  {
  "iss": "https://talao.co",
  "aud": [
    "iPSoIWDI4shQ0dEG86ZpSFdj"
  ],
  "iat": 1603895896,
  "exp": 1603899496,
  "auth_time": 1603895896,
  "nonce": "64867",
  "at_hash": "uAaDX0YA4NnMkO6fW8-7nw",
  "sub": "did:talao:talaonet:81d8800eDC8f309ccb21472d429e039E0d9C79bB",
  "given_name": "Thierry",
  "family_name": "Thevenet",
  "gender": null,
  "email": "thierry.thevenet@talao.io"
  }

If you need to get data through the user _info endpoint :

.. code::

   curl -H "Authorization: Bearer your_access_token" https://talao.co/api/v1/user_info

Return is JSON (example) :

.. code-block:: JSON

  {
    "sub": "did:talao:talaonet:81d8800eDC8f309ccb21472d429e039E0d9C79bB",
    "given_name": "Thierry",
    "family_name": "Thevenet",
    "gender": null,
    "email": "thierry.thevenet@talao.io",
    "phone": null,
    "resume": {}
  }


Client Credentials Flow
------------------------

For basic actions we offer OAuth 2.0 application access via the Client Credentials Flow.
Commonly referred to as "OAuth two-legged", this flow allows your application to call Talao's APIs  :

*   https://talao.co/api/v1/issue : to issue certificates.
*   https://talao.co/api/v1/create : to create an identity.
*   https://talao.co/api/v1/refer : to add a referent.
*   https://talao.co/api/v1/request_partner : to request a partnership.
*   https://talao.co/api/v1/reject_partner : to reject a partnership.


Using the Client Credentials Flow is straightforward - simply issue an HTTP GET against the token endpoint with both your client_id and client_secret set appropriately to get the access token :

.. code::

  $ curl -u your_client_id:your_secret_value -XPOST https://talao.co/api/v1/oauth/token -F grant_type=client_credentials -F scope=experience+skill

To call an endpoint :

.. code::

  $ curl -H "Authorization: Bearer your_access_token" https://talao.co/api/v1/endpoint   your_data

For test, get an access token with those credentials :

* client_id: vJENicdQO38y1pcVRQREeuoy
* client_secret: oMwwlIQRjz751loQHesGWIFmH6iVt7XmO0s1W3Vax1pdMUG5

.. code-block:: JSON

  $ curl -u vJENicdQO38y1pcVRQREeuoy:oMwwlIQRjz751loQHesGWIFmH6iVt7XmO0s1W3Vax1pdMUG5 -XPOST https://talao.co/api/v1/oauth/token -F grant_type=client_credentials -F scope=experience

Your access token is live for 3000 seconds.

Endpoint : https://talao.co/api/v1/create
******************************************

Create an Identity for Talent.
Your company is appointed as a referent to issue certificates to this Talent.
Talent Identity credentials are sent by email to Talent.
Return JSON with Talent identifier (DID) and username

Example :

.. code::

  $ curl -X POST https://talao.co/api/v1/create  \
   -H "Authorization: Bearer rp9maPLRQEJ3bviGwTMPXvQdcx8YlqONuVDFZSAqupDdgXb9" \
   -H "Content-Type: application/json" \
   -d '{"firstname":"jean", "lastname":"pascalet", "email":"jean.pascalet@talao.io"}'

Response (JSON)

.. code-block:: JSON

  {
    "did": "did:talao:talaonet:__TEST__",
    "username" : "jeanpascalet",
    "firstname": "jean",
    "lastname": "pascalet",
    "email": "jean.pascalet@talao.io"}
  }

Try for test with your access token :

.. code-block:: JSON

  $ curl -X POST https://talao.co/api/v1/create  -H "Authorization: Bearer your_acces_token" -H "Content-Type: application/json" -d '{"firstname":"jean", "lastname":"pascalet", "email":"jean.pascalet@talao.io"}'


Endpoint : https://talao.co/api/v1/issue
*****************************************

Issue a certificate to a Talent depending on the scope allowed.
Company must be a in the Talent's referent list. Use the Authorization Code flow (scope = certification) to be added to that list.

Example :

.. code::

  $ curl -X POST https://talao.co/api/v1/issue  \
   -H "Authorization: Bearer rp9maPLRQEJ3bviGwTMPXvQdcx8YlqONuVDFZSAqupDdgXb9" \
   -H "Content-Type: application/json" \
   -d '{"did" : "did:talao:talonet:2165165", "certificate": JSON_certificate}'

with JSON_certificate structure depends on certificate type. Example of an experience JSON_certificate :

.. code-block:: JSON

  {
    "type" : "experience",
    "title" : "Chef de projet Blockchain",
    "description" : "Conception et realisation d un prototype Ethereum d un suivi de production",
    "start_date" : "2018/02/22",
    "end_date" : "2019/01/25",
    "skills" : ["Ethereum", "Solidity"],
    "score_recommendation" : 2,
    "score_delivery" : 3,
    "score_schedule" : 4,
    "score_communication" : 4,
  }

JSON return :

.. code-block:: JSON

  {
    "link": "https://talao.co/certificate/?certificate_id=did:talao:talaonet:81d8800eDC8f309ccb21472d429e039E0d9C79bB:document:12",
    "type" : "experience",
    "title" : "Chef de projet Blockchain",
    "description" : "Conception et ralisation d un prototype Ethereum d un suivi de production",
    "start_date" : "2018/02/22",
    "end_date" : "2019/01/25",
    "skills" : ["Ethereum", "Solidity"],
    "score_recommendation" : 2,
    "score_delivery" : 3,
    "score_schedule" : 4,
    "score_communication" : 4,
    "manager" : "Director",
    "reviewer" : "",
    "logo" : "QmRgLUZbLfRR7hW4CB7tqTFrjrfXxVUaP3XnNjC5D5QzT",
    "signature" : "QmHT7UZbLfRR7hW4CB7tqTFrjrfXxVUaP3XnNjC5D5Qzza",
    "ipfs_hash" : "456ab656446564f",
    "transaction_hash" : "46516871335453AB354654CF551651"
  }
