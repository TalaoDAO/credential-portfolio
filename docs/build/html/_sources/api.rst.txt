
Talent Connect API
==================

Talent Connect is a set of APIs to exchange public and private data between Professional Identities (Talent or Company).
For companies it is an easy way to get reliable data about Talents and it is a powerfull and secure tool for automatic onbarding.

Those API do not provide account management (update logo, signature, set company details, add managers, change password, ...)

Standard use cases for APIs are :

* Talent registers to a Company recrutment website with his Talao Identity. He gives an access to his public JSON resume (https://jsonresume.org/).
* Talent registers to a certification Company with his Talao Identity. He gives to the company an access to his public data and name the company as referent.
* Talent registers to a Company to exchange data (resume, passport, diplomas,...) receive claims (experience certificates, skill certificates, ...) and store documents (payslip,...).
* Company wants to create identity for its users
* Company issues certificates

We use OAuth2 Autorization Code flow and OAuth2 Client Credentials flow to manage those cases.

Contact us to have your application granted permission to use those flows.

OAuth 2.0 Authorization Code flow
----------------------------------

Used to get an access to Talent personal data with his agreement or to be appointed as a referent to issue certificates. Scopes available are :

* profile (sub, given_name, family_name, gender,...)
* birthdate
* email
* phone
* resume : JSON resume see https://jsonresume.org/
* proof_of_identity : see further
* certification : to be allowed issue certificates

Contact us to get a client_id and secret_id with your list of scopes.
Then to get a grant code for this flow, redirect your user to https://talao.co/api/v1/authorize with a subset of your scope list .
User will sign in with the Talao login view and consent for scopes.

.. code::

   https://talao.co/api/v1/authorize?response_type=code&client_id=your_client_id&scope=your_scopes

With the grant code, connect to the token endpoint https://talao.co/api/v1/auth/token to get an acces token. You will need your client_secret.

.. code::

   curl -u your_client_id:your_secret_value -XPOST https://talao.co/api/v1/oauth/token -F grant_type=client_credentials -F scope=your_scopes

With the access token you can get user_info with its endpoint https://talao.co/api/v1/user_info. Access token is live 3000 seconds.

.. code::

   curl -H "Authorization: Bearer your_access_token" https://talao.co/api/v1/user_info

Return is JSON (exemple) :

.. code-block:: JSON

  {
    "sub": "did:talao:talaonet:81d8800eDC8f309ccb21472d429e039E0d9C79bB",
    "given_name": "Thierry",
    "family_name": "Thevenet",
    "gender": null,
    "email": "thierry.thevenet@talao.io",
    "phone": null,
    "resume": {}
  }


OAuth 2.0 Client Credentials Flow
---------------------------------

For basic actions we offer OAuth 2.0 application access via the Client Credentials Flow.
Commonly referred to as "OAuth two-legged", this flow allows your application to authorize with Talao's API directly throught following endpoints :

*   https://talao.co/api/v1/user_info/issue : to issue certificates. Available depending on scope allowed by Talao..
*   https://talao.co/api/v1/user_info/create : to create identity for others. Always available.
*   https://talao.co/api/v1/user_info/refer : to add a referent.Always available.
*   https://talao.co/api/v1/user_info/reject_partner : to request a partnership. Always available.

Scopes are for certificate issuance :

*  skill
*  experience
*  recommendation

Using the Client Credentials Flow is straightforward - simply issue an HTTP GET against the endpoint with both your client_id and client_secret set appropriately to get the access token :

.. code::

   curl -u your_client_id:your_secret_value -XPOST https://talao.co/api/v1/oauth/token -F grant_type=client_credentials -F scope=experience

To get an access to an endpoint :

.. code::

   curl -H "Authorization: Bearer your_access_token" https://talao.co/api/v1/endpoint   your_data

For Test, try to get an access token with those credentials :

* client_id: vJENicdQO38y1pcVRQREeuoy
* client_secret: oMwwlIQRjz751loQHesGWIFmH6iVt7XmO0s1W3Vax1pdMUG5

.. code-block:: JSON

    $curl -u vJENicdQO38y1pcVRQREeuoy:oMwwlIQRjz751loQHesGWIFmH6iVt7XmO0s1W3Vax1pdMUG5 -XPOST https://talao.co/api/v1/oauth/token -F grant_type=client_credentials -F scope=experience

You will get an access token to use for 3000 seconds

https://talao.co/api/v1/user_info/create
*****************************************

Create an Identity for others. Example :

.. code::

   $ curl -X POST https://talao.co/api/v1/create  \
   -H "Authorization: Bearer rp9maPLRQEJ3bviGwTMPXvQdcx8YlqONuVDFZSAqupDdgXb9" \
   -H "Content-Type: application/json" \
   -d '{"firstname":"jean", "lastname":"pascalet", "email":"jean.pascalet@talao.io"}'

Response

.. code-block:: JSON

  {
    "status" : "900",
    "did": "did:talao:talaonet:__TEST__",
    "firstname": "jean",
    "lastname": "pascalet",
    "email": "jean.pascalet@talao.io"}
  }

status are :

* 900 : Ok
* 910 : Failed, client has no identity
* 920 : Failed, creation identity (Ethereum transaction failed)
* 930 : Failed, incorrect request (data missing)

Try for Test only with your access token :

.. code-block:: JSON

   $curl -X POST https://talao.co/api/v1/create  -H "Authorization: Bearer your_acces_token" -H "Content-Type: application/json" -d '{"firstname":"jean", "lastname":"pascalet", "email":"jean.pascalet@talao.io"}'

https://talao.co/api/v1/user_info/issue
****************************************


https://talao.co/api/v1/user_info/partner
******************************************
